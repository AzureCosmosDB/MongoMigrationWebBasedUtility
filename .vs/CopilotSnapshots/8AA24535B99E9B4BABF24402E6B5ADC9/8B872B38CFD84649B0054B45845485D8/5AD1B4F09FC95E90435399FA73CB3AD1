using Newtonsoft.Json;
using OnlineMongoMigrationProcessor.Models;
using System;
using System.Collections.Generic;

#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.

namespace OnlineMongoMigrationProcessor
{
    public class MigrationJob
    {
        public string? Id { get; set; }
        public string? Name { get; set; }
        public string? SourceEndpoint { get; set; }
        public string? TargetEndpoint { get; set; }
        [JsonIgnore]
        public string? SourceConnectionString { get; set; }
        [JsonIgnore]
        public string? TargetConnectionString { get; set; }
        public string? SourceServerVersion { get; set; }
        public string? NameSpaces { get; set; }
        public DateTime? StartedOn { get; set; }
        public bool IsCompleted { get; set; }
        public bool IsOnline { get; set; }
        public bool IsCancelled { get; set; }
        public bool IsStarted { get; set; }
        //public bool CurrentlyActive { get; set; }
        
        // New property to replace UseMongoDump
        public JobType JobType { get; set; } = JobType.MongoCopy;
        
        // Legacy property for backward compatibility - will be removed in future versions
        // This will only be deserialized if present in JSON, but never serialized
        [JsonProperty("UseMongoDump", DefaultValueHandling = DefaultValueHandling.Ignore)]
        private bool? _useMongoDumpLegacy
        {
            get => null; // Never serialize this
            set
            {
                // Handle deserialization of legacy UseMongoDump property
                if (value.HasValue)
                {
                    JobType = value.Value ? JobType.MongoDump : JobType.MongoCopy;
                }
            }
        }
        
        // Backward compatibility property that maps to JobType
        [JsonIgnore]
        public bool UseMongoDump
        {
            get => JobType == JobType.MongoDump;
            set => JobType = value ? JobType.MongoDump : JobType.MongoCopy;
        }

        public bool IsSimulatedRun { get; set; }
        public bool SkipIndexes { get; set; }
        public bool AppendMode { get; set; }
        public bool SyncBackEnabled { get; set; }
        public bool ProcessingSyncBack { get; set; }
        public bool RunComparison { get; set; }
        public bool CSStartsAfterAllUploads { get; set; }
        public bool CSPostProcessingStarted { get; set; }
        public List<MigrationUnit>? MigrationUnits { get; set; }
    }
}