<div class="modal-backdrop" xclass="modal modal-lg fade show d-block bg-dark bg-opacity-75" id="myModal" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Caption</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="@Cancel"></button>
            </div>
            <div class="modal-body">
                <p>@Message</p>
            </div>
            <div class="modal-footer">
                @switch (Type)
                {
                    case Category.Okay:
                        <button type="button" class="btn btn-primary" @onclick=@Ok>OK</button>
                        break;
                    case Category.CutoverNot:
                        <button type="button" class="btn btn-primary" @onclick=@Ok>Cutover</button>
                        <button type="button" class="btn btn-secondary" @onclick="@Cancel">Don't Cutover</button>
                        break;
                    case Category.CompleteNot:
                        <button type="button" class="btn btn-primary" @onclick=@Ok>Complete</button>
                        <button type="button" class="btn btn-secondary" @onclick="@Cancel">Don't Complete</button>
                        break;
                    case Category.SyncBackNot:
                        <button type="button" class="btn btn-primary" @onclick=@Ok>Start Sync Back</button>
                        <button type="button" class="btn btn-secondary" @onclick="@Cancel">Don't Cutover</button>
                        break;
                    case Category.DeleteNot:
                        <button type="button" class="btn btn-primary" @onclick=@Ok>Delete</button>
                        <button type="button" class="btn btn-secondary" @onclick="@Cancel">Don't Delete</button>
                        break;
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter] public string? Caption { get; set; }
    [Parameter] public string? Message { get; set; }
    [Parameter] public EventCallback<YesNoDialogResult> OnClose { get; set; }
    [Parameter] public Category Type { get; set; }

    private Task Cancel()
    {
        
        return OnClose.InvokeAsync(new YesNoDialogResult { IsConfirmed = false, DialogType = Type });
    }

    private Task Ok()
    {
        return OnClose.InvokeAsync(new YesNoDialogResult { IsConfirmed = true, DialogType = Type });
    }

    public enum Category
    {
        Okay,
        CutoverNot,
        CompleteNot,
        SyncBackNot,
        DeleteNot

    }

    public class YesNoDialogResult
    {
        public bool IsConfirmed { get; set; }
        public Category DialogType { get; set; }
    }
}
